@using MartineOBotWebApp.Helpers
@model MartineOBotWebApp.Models.Entities.ProfilePicture

@{
    ViewBag.Title = "PictureDetails";
}

<h2>Picture Details</h2>

<div class="col-md-6">
    <h3>Profile Picture</h3>
    <hr/>
    <table class="table table-hover">
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Age)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Gender)
            </th>
        </tr>
        <tr>
            <td>
                @Model.Age
            </td>
            <td>
                @Html.DisplayFor(model => model.Gender)
            </td>
        </tr>
        <tr>
            <td colspan="2">
                <center><a href="@Url.Content(Model.Uri)"><img src="@Url.Content(Model.Uri)" class="img-responsive img-rounded"/></a></center>
            </td>
        </tr>
    </table>
</div>
<div class="col-md-6">
    <h3>Emotions Score</h3>
    <hr/>
    @{
        if (Model.EmotionScores != null){
            <table class="table table-striped">
                <tr>
                    <th>
                        @Html.DisplayNameFor(model => model.EmotionScores.Happiness)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.EmotionScores.Fear)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.EmotionScores.Disgust)
                    </th>
                </tr>

                <tr>
                    <td>
                        @Math.Round((double) Model.EmotionScores.Happiness*100) %
                    </td>
                    <td>
                        @Math.Round((double) Model.EmotionScores.Fear*100) %
                    </td>
                    <td>
                        @Math.Round((double) Model.EmotionScores.Disgust*100) %
                    </td>
                </tr>
                <tr>
                    <th>
                        @Html.DisplayNameFor(model => model.EmotionScores.Neutral)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.EmotionScores.Sadness)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.EmotionScores.Surprise)
                    </th>
                </tr>
                <tr>
                    <td>
                        @Math.Round((double) Model.EmotionScores.Neutral*100) %
                    </td>
                    <td>
                        @Math.Round((double) Model.EmotionScores.Sadness*100) %
                    </td>
                    <td>
                        @Math.Round((double) Model.EmotionScores.Surprise*100) %
                    </td>
                </tr>
                <tr>
                    <th>
                        @Html.DisplayNameFor(model => model.EmotionScores.Contempt)
                    </th>
                </tr>
                <tr>
                    <td>
                        @Math.Round((double) Model.EmotionScores.Contempt*100) %
                    </td>
                </tr>
            </table>
        }
        else{
            <p>No emotion found</p>
        }
    }
    
</div>
<p>
    @Html.ActionLink("Back", "Detail", "Visit", new { id = Model.Visit.Id }, null)
</p>
